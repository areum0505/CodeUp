// 1562 : [기초-함수작성] 함수로 두 정수의 작은 값 리턴하기
#include <stdio.h>
 
int n, m;
int min(int p, int q)
{
  return p<=q?p:q;
}
int main()
{
  scanf("%d%d", &n, &m);
  printf("%d\n", min(n, m));
}


// 1563 : [기초-함수작성] 함수로 세 정수 중 중간 값 리턴하기 
#include <stdio.h>
 
int n, m, x;

int max(int p, int q){ return p>=q?p:q;}

int min(int p, int q){ return p<q?p:q;}
int mid(int m, int n, int x) {
    if (m == max(n, m) && m == min(m, x))
		return m;
    if (n == max(x, n) && n == min(n, m))
		return n;
	if (x == max(m, x) && x == min(x, n))
		return x;
}
int main()
{
  scanf("%d%d%d", &n, &m, &x);
  printf("%d\n", mid(n, m, x));
}


// 1564 : [기초-함수작성] 함수로 최대공약수 리턴하기
#include <stdio.h>

int a, b;

int gcd(int a, int b) {
    int mod = a % b;
    while (mod > 0) {
        a = b;
        b = mod;
        mod = a % b;
    }
    return b;
}
int main()
{
  scanf("%d%d", &a, &b);
  printf("%d\n", gcd(a, b));
}


// 1565 : [기초-함수작성] 함수로 최소공배수 리턴하기
#include <stdio.h>

int gcd(int p, int q){ if(p==0) return q; return gcd(q%p, p);}

long long int lcm(int a, int b) {
    return (long long int)a * b / gcd(a, b);
}
int main()
{
  int a, b;
  scanf("%d%d", &a, &b);
  printf("%lld\n", lcm(a, b));
}


// 1566 : [기초-함수작성] 함수로 거듭제곱 리턴하기 
#include <stdio.h>

int a, n;
long long int pow(int a, int n) {
    long long int r = 1;
    if (a == 1 || n == 0) return 1;
    else {
        for (int i = 1; i <= n; i++) {
            r *= a;
        }
        return r;
    }
}
int main()
{
  scanf("%d%d", &a, &n);
  printf("%lld\n", pow(a, n));
}


// 1567 : [기초-함수작성] 함수로 배열의 부분합 리턴하기
#include <stdio.h>

int n, a, b, d[1010];
long long int subsetsum(int a, int b) {
    long long int sum = 0;
    for(int i = a; i <= b; i++) {
        sum += d[i];
    }
    return sum;
}

int main()
{
  scanf("%d", &n);

  for(int i=1; i<=n; i++)
    scanf("%d", &d[i]);

  scanf("%d%d", &a, &b);

  printf("%lld\n", subsetsum(a, b));
}


// 1568 : [기초-함수작성] 함수로 배열의 최대값 위치 리턴하기
#include <stdio.h>

int n, a, b, d[1010];
int maxi(int a, int b) {
    int max = a;
    for(int i = a; i <= b; i++) {
        if(d[max] < d[i])
            max = i;
    }
    return max;
}
int main()
{
  scanf("%d", &n);

  for(int i=1; i<=n; i++)
    scanf("%d", &d[i]);

  scanf("%d%d", &a, &b);

  printf("%d\n", maxi(a, b));
}


// 1569 : [기초-함수작성] 함수로 배열의 최대값 위치 리턴하기 2
#include <stdio.h>

int n, k, d[1010];
int findi(int k) {
    for(int i = 1; i <= n; i++) {
        if(k == d[i]) {
            return i;
        } else {
            continue;
        }
    }
    return -1;
}
int main()
{
  scanf("%d", &n);

  for(int i=1; i<=n; i++)
    scanf("%d", &d[i]);

  scanf("%d", &k);

  printf("%d\n", findi(k));
}


// 1570 : [기초-함수작성] 함수로 Lower Bound 위치 리턴하기
#include <stdio.h>

int n, k, d[1010];
int lower_bound(int k) {
    for(int i = 1; i <= n; i++) {
        if(d[i] >= k) {
            return i;
        } else {
            continue;
        }
    }
    return n+1;
}

int main()
{
  scanf("%d", &n);

  for(int i=1; i<=n; i++)
    scanf("%d", &d[i]);

  scanf("%d", &k);

  printf("%d\n", lower_bound(k));
}


// 1571 : [기초-함수작성] 함수로 Upper Bound 위치 리턴하기
#include <stdio.h>

int n, k, d[1010];
int upper_bound(int k) {
    for (int i = 1; i <= n; i++)
        if (k < d[i])
            return i;
    return n + 1;
}
int main()
{
   scanf("%d", &n);

  for(int i=1; i<=n; i++)
    scanf("%d", &d[i]);

  scanf("%d", &k);

  printf("%d\n", upper_bound(k));
}
